{"version":3,"sources":["components/Editor.jsx","components/FileSave.jsx","components/FileExplorer.jsx","App.js","index.js"],"names":["Editor","language","displayHeader","value","onChange","className","backgroundColor","color","padding","borderTopLeftRadius","borderTopRightRadius","onBeforeChange","editor","data","autoCursor","options","lineWrapping","mode","lineNumbers","theme","selection","focus","onSelection","refresh","FileSave","html","css","javaScript","downloadFile","file","file1","File","type","FileSaver","saveAs","file2","file3","as","Button","rightIcon","ChevronDown","onClick","FileExplorer","setHtml","setCss","setJavaScript","variant","ml","mb","justifyContent","width","_selected","bg","mr","mt","App","useState","srcDoc","setSrcDoc","useEffect","timeout","setTimeout","clearTimeout","flexDirection","height","title","sandbox","frameBorder","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0231f58a.chunk.js","sourcesContent":["import React from 'react'\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/monokai.css';\nimport 'codemirror/mode/xml/xml';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/mode/css/css';\n\nimport {Controlled as CodeMirror} from 'react-codemirror2'\nimport { Box } from '@chakra-ui/react';\n\n\nconst Editor = ({language,\n                displayHeader,\n                value,\n                onChange\n                }) => {\n    \n\n    const handleChange = (editor, data, value) => {\n        onChange(value);\n    }\n\n    \n\n    return (\n        <Box >\n            <div className = \"container--editor-header\">\n                <Box backgroundColor = \"blackAlpha.800\" \n                     color=\"white\" \n                     padding={4} \n                     borderTopLeftRadius=\"2xl\"\n                     borderTopRightRadius=\"2xl\">\n                    {displayHeader}\n                </Box>\n               \n            </div>\n            {/* used code mirror library for the text editor*/}\n            <CodeMirror \n                onBeforeChange={handleChange}\n                value={value}\n                autoCursor=\"true\"\n                options = {{\n                    lineWrapping: true,\n                    mode: language,\n                    lineNumbers: true,\n                    theme: \"monokai\",     \n                    autoCursor:true          \n                }}\n                selection={{\n                    focus: true\n                }}\n                onSelection={(editor, data) => {editor.refresh()}}\n               \n            />\n        </Box>\n    )\n}\n\nexport default Editor\n\n","import { Button, \n         Menu,\n         MenuButton,\n         MenuList,\n         MenuItem,\n         Center,\n         } from \"@chakra-ui/react\";\nimport {ChevronDownIcon} from '@chakra-ui/icons';\nimport FileSaver from \"file-saver\";\nimport React from 'react'\n\nconst FileSave = ({html,css,javaScript}) => {\n\n    const downloadFile= (file) => {       \n        \n        if (file === \"file1\") {\n            const file1 = new File([html], \"index.html\", {type: \"text/plain;charset=utf-8\"});\n            FileSaver.saveAs(file1);\n        } else if (file === \"file2\") {\n            const file2 = new File([css], \"index.css\", {type: \"text/plain;charset=utf-8\"});\n            FileSaver.saveAs(file2);\n        } else if (file === \"file3\") {\n            const file3 = new File([javaScript], \"index.js\", {type: \"text/plain;charset=utf-8\"});\n            FileSaver.saveAs(file3);\n        } else if (file === \"all\") {\n            const file1 = new File([html], \"index.html\", {type: \"text/plain;charset=utf-8\"});\n            const file2 = new File([css], \"index.css\", {type: \"text/plain;charset=utf-8\"});\n            const file3 = new File([javaScript], \"index.js\", {type: \"text/plain;charset=utf-8\"});\n            FileSaver.saveAs(file1);\n            FileSaver.saveAs(file2);\n            FileSaver.saveAs(file3);\n\n        }\n    }\n\n    return (\n        <Center>\n           <Menu>\n            <MenuButton as={Button} rightIcon={<ChevronDownIcon />}>\n                Download\n            </MenuButton>\n            <MenuList>\n                <MenuItem onClick = {() => downloadFile(\"file1\")}>index.html</MenuItem>\n                <MenuItem onClick = {() => downloadFile(\"file2\")}>index.css</MenuItem>\n                <MenuItem onClick = {() => downloadFile(\"file3\")}>index.js</MenuItem>\n                <MenuItem onClick = {() => downloadFile(\"all\")}>download all</MenuItem>\n            </MenuList>\n            </Menu>  \n        </Center>\n    )\n}\n\nexport default FileSave\n","import Editor from \"./Editor\";\nimport {\n  Tabs,\n  TabList,\n  TabPanels,\n  Tab,\n  TabPanel,\n  Box,\n  Flex\n} from \"@chakra-ui/react\";\nimport FileSave from \"./FileSave\";\n\nfunction FileExplorer({\n  html,\n  setHtml,\n  css,\n  setCss,\n  javaScript,\n  setJavaScript,\n}) {\n  return (\n    // Used tabs to show file explorer\n    <Tabs variant=\"unstyled\" ml={2}>\n      <Flex mb = {2} justifyContent=\"space-between\">      \n        <TabList width=\"15vw\" color=\"white\" ml = {6}>\n          <Tab _selected={{ color: \"white\", bg: \"orange.400\" }}>index.html</Tab>\n          <Tab _selected={{ color: \"white\", bg: \"orange.400\" }}>index.css</Tab>\n          <Tab _selected={{ color: \"white\", bg: \"orange.400\" }}>index.js</Tab>\n        </TabList>\n        <Box mr={6} mt = {2}>\n          <FileSave html = {html} css = {css} javaScript = {javaScript} />\n        </Box>\n      </Flex>\n      <Box ml={6}>\n        <hr width=\"40%\"/>\n      </Box>\n      <TabPanels>\n        <TabPanel>\n          <Editor\n            language=\"xml\"\n            displayHeader=\"index.html\"\n            value={html}\n            onChange={setHtml}\n          />\n        </TabPanel>\n        <TabPanel>\n          <Editor\n            language=\"css\"\n            displayHeader=\"index.css\"\n            value={css}\n            onChange={setCss}\n          />\n        </TabPanel>\n        <TabPanel>\n          <Editor\n            language=\"xml\"\n            displayHeader=\"index.js\"\n            value={javaScript}\n            onChange={setJavaScript}\n          />\n        </TabPanel>\n      </TabPanels>\n    </Tabs>\n  );\n}\n\nexport default FileExplorer;\n","import { useState, useEffect } from \"react\";\nimport FileExplorer from \"./components/FileExplorer\";\nimport \"./App.css\";\nimport { Box, Center, Flex } from \"@chakra-ui/react\";\n\nconst App = () => {\n  const [html, setHtml] = useState(\"\");\n  const [css, setCss] = useState(\"\");\n  const [javaScript, setJavaScript] = useState(\"\");\n  const [srcDoc, setSrcDoc] = useState();\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setSrcDoc(`\n      <html>\n        <body>${html}</body>\n        <style>${css}</style>\n        <script>${javaScript}</script>\n      </html>\n    `);\n      return () => clearTimeout(timeout);\n    }, 280);\n  }, [html, css, javaScript]);\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Box mt={2} mb={2} backgroundColor=\"blackAlpha.700\">\n        <FileExplorer\n          html={html}\n          setHtml={setHtml}\n          javaScript={javaScript}\n          setJavaScript={setJavaScript}\n          css={css}\n          setCss={setCss}\n        />\n      </Box>\n      <Center height=\"35vh\" width=\"100vw\" backgroundColor=\"white\">\n        <iframe\n          srcDoc={srcDoc}\n          title=\"output\"\n          sandbox=\"allow-scripts\"\n          width=\"97%\"\n          height=\"100%\"\n          frameBorder=\"none\"\n        />\n      </Center>\n    </Flex>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nReactDOM.render(\n  <ChakraProvider>\n    <App />\n  </ChakraProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}